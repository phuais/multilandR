% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/save_mland.R
\name{save_mland}
\alias{save_mland}
\title{Saves a 'MultiLand' or 'MultiLandMetrics' object}
\usage{
save_mland(
  x,
  name = NULL,
  gdal = c("COMPRESS=DEFLATE", "PREDICTOR=2", "ZLEVEL=9"),
  ...
)
}
\arguments{
\item{x}{Object of class 'MultiLand' or 'MultiLandMetrics'.}

\item{name}{If \code{x} is an object of class 'MultiLand', the name of the zip file or directory where
files will be saved, or the name of the R file if \code{x} is an object of class 'MultiLandMetrics'. If NULL (default),
the name will be 'mland_' or 'mlandmetrics_' + a large random number.}

\item{gdal}{GDAL driver specific datasource creation options. See the GDAL documentation. With the
\href{https://gdal.org/drivers/raster/gtiff.html}{GeoTiff file format}, \code{\link[=save_mland]{save_mland()}} uses the
following compression options: c("COMPRESS=DEFLATE", "PREDICTOR=2", "ZLEVEL=9"). Only relevant
if \code{x} is an object of class 'MultiLand'.}

\item{...}{If \code{x} is an object of class 'MultiLand', \code{...} should depict other arguments passed to
\link[terra:writeRaster]{terra::writeRaster}, the function to write rasterlayers (from intersections and plain rasterlayers).
Otherwise, if \code{x} is an object of class 'MultiLandMetrics', \code{...} should depict other arguments passed
to \code{\link[=save]{save()}}. See Details.}
}
\value{
If \code{x} is an object of class 'MultiLand', a zip file or a directory containing all
information regarding the 'MultiLand' object provided in 'x'. Otherwise, if \code{x} is an object of
class 'MultiLandMetrics', the function will export the R object as if it was exported as a
regular R object with \code{\link[=saveRDS]{saveRDS()}}.
}
\description{
Exports an object of class 'MultiLand' to be read in the future with \code{\link[=load_mland]{load_mland()}}, or
an object of class 'MultiLandMetrics' as if it was saved with \code{\link[=saveRDS]{saveRDS()}}.
}
\details{
'MultiLand' objects should be exported with this function rather than exporting as an
external representation of R objects with \code{\link[=saveRDS]{saveRDS()}}. This is because objects of classes
'SpatVector' and 'SpatRaster' (from package terra) contained inside a 'MultiLand'
object cannot be exported as regular R objects. The exported object will be a zip file,
and can be loaded again into an R session with \code{\link[=load_mland]{load_mland()}}.

Relevant arguments can be passed to the function \link[terra:writeRaster]{terra::writeRaster}, which is used to write
rasterlayers from a 'MultiLand' object. Particularly, in the argument \code{gdal} one can specify
relevant options regarding raster compression. This may reduce raster sizes significantly. Definition
of some other arguments inside \link[terra:writeRaster]{terra::writeRaster} may affect exportation of rasterlayer
objects, in the context of a 'MultiLand' object.

Objects of class 'MultiLandMetrics', instead, do not contain 'SpatVector' or 'SpatRaster' objects
and can be exported as regular R objects with \code{\link[=saveRDS]{saveRDS()}}. The user may use \code{\link[=saveRDS]{saveRDS()}} or
\code{\link[=save_mland]{save_mland()}}, and the outcome will be identical.
}
\examples{
\dontrun{
# Load MultiLand object
mland_obj <- system.file("extdata", "ernesdesign.zip", package = "multilandr")
ernesdesign2 <- load_mland(mland_obj)

# Save it again
save_mland(ernesdesign2)

# Save it again but defining a higher compression for rasterlayers
save_mland(ernesdesign2, gdal = "COMPRESS=DEFLATE")

# Loads a MultiLandMetrics object previously generated with metrics()
mlm_obj <- system.file("extdata", "ed_metrics.rds", package = "multilandr")
ed_metrics2 <- load_mland(mlm_obj)

# Save it again. In this case, save_mland() is the same as using saveRDS()
save_mland(ed_metrics2)
}
}
\seealso{
\code{\link[=load_mland]{load_mland()}}, \code{\link[=mland]{mland()}}, \code{\link[=metrics]{metrics()}}
}
